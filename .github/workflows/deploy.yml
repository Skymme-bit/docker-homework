name: Deploy to Solace Server

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: self-hosted  # Runs on your Windows self-hosted machine

    steps:
      - name: üöÄ Checkout repository
        uses: actions/checkout@v3

      - name: üîë Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üèóÔ∏è Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/docker-homework-backend:latest -f backend/Dockerfile ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-homework-backend:latest

      - name: üèóÔ∏è Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/docker-homework-frontend:latest -f frontend/Dockerfile ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-homework-frontend:latest

  deploy:
    name: Deploy to Solace Server
    needs: build-and-push
    runs-on: self-hosted  # Runs on your Windows self-hosted runner

    steps:
      - name: üöÄ Deploy to Solace via Native SSH
        shell: pwsh  # Use PowerShell on Windows
        run: |
          echo "Starting SSH connection to Solace..."
          
          $sshPrivateKey = "${{ secrets.SSH_PRIVATE_KEY }}"
          $sshKeyFile = "$env:USERPROFILE\.ssh\id_rsa"
          
          # Save SSH key to file
          $sshPrivateKey | Out-File -FilePath $sshKeyFile -Encoding ascii
          chmod 600 $sshKeyFile
          
          # Connect to Solace and run deployment commands
          ssh -i $sshKeyFile -o StrictHostKeyChecking=no ${{ secrets.SOLACE_USER }}@${{ secrets.SOLACE_HOST }} << 'EOF'
            echo "üîÑ Pulling latest Docker images..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/docker-homework-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/docker-homework-frontend:latest
          
            echo "üì¶ Updating application..."
            cd ~/myapp
            docker-compose down
            docker-compose up -d

            echo "‚úÖ Deployment complete!"
          EOF