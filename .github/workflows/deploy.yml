name: Deploy to Solace Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker-connection-test:
    name: Verify Docker Setup
    runs-on: self-hosted
    steps:
      - name: Check PowerShell Version in GitHub Actions
        shell: powershell
        run: |
          $PSVersionTable

      - name: Show Runner User
        shell: powershell
        run: whoami

      - name: Debug Docker Password Length
        shell: powershell
        run: |
          $password = "${{ secrets.DOCKER_PASSWORD }}"
          Write-Output "Password Length: $($password.Length)"

      - name: Verify Docker CLI
        shell: powershell
        env:
          DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
        run: |
          echo "Using Docker Host: $env:DOCKER_HOST"
          docker version
          docker info

      - name: Test Docker Network Connectivity
        shell: powershell
        env:
          DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
        run: |
          docker pull alpine

      - name: Secure Docker Login
        shell: powershell
        run: |
          docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

  build-and-push:
    name: Build & Push Docker Images
    needs: docker-connection-test
    runs-on: self-hosted

    steps:
      - name: üöÄ Checkout repository
        uses: actions/checkout@v3

      - name: üèóÔ∏è Build and push backend Docker image
        shell: powershell
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/docker-homework-backend:latest -f backend/Dockerfile ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-homework-backend:latest

      - name: üèóÔ∏è Build and push frontend Docker image
        shell: powershell
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/docker-homework-frontend:latest -f frontend/Dockerfile ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-homework-frontend:latest

  deploy:
    name: Deploy to Solace Server
    needs: build-and-push
    runs-on: self-hosted

    steps:
      - name: üöÄ Deploy to Solace via SSH (PowerShell)
        shell: powershell
        run: |
          echo "üîÑ Connecting to Solace Server via SSH..."
          ssh -i $env:SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $env:SOLACE_USER@$env:SOLACE_HOST << 'EOF'
          echo "üîÑ Pulling latest Docker images..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/docker-homework-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/docker-homework-frontend:latest

          echo "üì¶ Updating application..."
          cd ~/myapp
          docker-compose down
          docker-compose up -d

          echo "‚úÖ Deployment complete!"
          EOF
        env:
          SOLACE_HOST: ${{ secrets.SOLACE_HOST }}
          SOLACE_USER: ${{ secrets.SOLACE_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
